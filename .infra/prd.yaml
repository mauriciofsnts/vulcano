valkey:
  architecture: standalone
  primary:
    livenessProbe:
      initialDelaySeconds: 5
    readinessProbe:
      initialDelaySeconds: 5
  auth:
    enabled: false
  commonConfiguration: |-
    appendonly yes
    save ""

vulcano:
  image:
    repository: ghcr.io/mauriciofsnts/vulcano
    pullPolicy: IfNotPresent
    tag: {{ releaseData "tag" }}

  secrets:
    - name: vulcano-config-secret
      type: Opaque
      data:
        config.yaml: |
          server:
            port: 8080

          db:
            type: 'postgres'
            migrate: true
            postgres:
              host: {{ projectSecret "POSTGRES_HOST" }}
              user: {{ projectSecret "POSTGRES_USER" }}
              password: {{ projectSecret "POSTGRES_PASSWORD" }}
              port: 5432
              database: 'vulcano'

          valkey:
            address: 'valkey-headless.{{ .Namespace }}.svc.cluster.local:6379'
            password: ''

          log:
            level: 'INFO'
            type: 'colored'
            showSource: true

          discord:
            token: {{ projectSecret "DISCORD_TOKEN" }}
            guildID: {{ projectSecret "DISCORD_GUILDID" }}
            syncCommands: true
            prefix: '.'

          shortener:
            endpoint: 'https://url.db.cafe/api/v1/links'
            apiKey: {{ projectSecret "SHORTENER_APIKEY" }}

          news:
            apiKey: {{ projectSecret "NEWSAPI_APIKEY" }}

          footballData:
            apiKey: {{ projectSecret "FOOTBALLDATA_APIKEY" }}

  volumes:
    - name: vulcano-config-volume
      secret:
        secretName: vulcano-config-secret
        defaultMode: 420

  volumeMounts:
    - name: vulcano-config-volume
      mountPath: /app/configs/config.yaml
      subPath: config.yaml
      readOnly: true

  podAnnotations:
    # to ensure the pod is restarted even if only the config was changed
    rollme: "{{ randomUUID }}"

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    host: vulcano.mrzt.dev

  livenessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
